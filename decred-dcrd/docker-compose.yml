version: "3.7"

services:
  app_proxy:
    environment:
      APP_HOST: decred-ui
      APP_PORT: 3000

  dcrd:
    image: decred-node:latest
    build:
      context: .              # ← CHANGED from ./dcrd to .
      dockerfile: Dockerfile
    restart: on-failure
    stop_grace_period: 5m
    volumes:
      - ${APP_DATA_DIR}/data:/root/.dcrd  # ← CHANGED from /data to /root/.dcrd
    environment:

      APP_DECRED_NODE_RPC_USER: ${APP_DECRED_NODE_RPC_USER}
      APP_DECRED_NODE_RPC_PASS: ${APP_DECRED_NODE_RPC_PASS}
      APP_DECRED_NODE_RPC_PORT: ${APP_DECRED_NODE_RPC_PORT}
      APP_DECRED_NODE_P2P_PORT: ${APP_DECRED_NODE_P2P_PORT}
    user: "1000"
    networks:
      - default
    ports:
      - "${APP_DECRED_NODE_P2P_PORT}:${APP_DECRED_NODE_P2P_PORT}"
      - "${APP_DECRED_NODE_RPC_PORT}:${APP_DECRED_NODE_RPC_PORT}"
    healthcheck:
      test: [ "CMD", "dcrdctl", "--rpcuser=${APP_DECRED_NODE_RPC_USER}", "--rpcpass=${APP_DECRED_NODE_RPC_PASS}", "--rpcserver=127.0.0.1:${APP_DECRED_NODE_RPC_PORT}", "getblockchaininfo" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s



  decred-ui:
    image: decred-dashboard:latest
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    restart: on-failure
    depends_on:
      - dcrd
    environment:
      DCRD_RPC_HOST: dcrd
      DCRD_RPC_PORT: ${APP_DECRED_NODE_RPC_PORT}
      DCRD_RPC_USER: ${APP_DECRED_NODE_RPC_USER}
      DCRD_RPC_PASS: ${APP_DECRED_NODE_RPC_PASS}
    networks:
      - default

networks:
  default:
    driver: bridge
